# Generated by Django 2.0.13 on 2019-08-20 15:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pipeline', '0010_program_wait_for_files'),
    ]

    operations = [
        migrations.AlterField(
            model_name='pipeline',
            name='description',
            field=models.TextField(blank=True, help_text='Describe the pipeline and what it does in detail.', null=True),
        ),
        migrations.AlterField(
            model_name='pipeline',
            name='test_files',
            field=models.ManyToManyField(blank=True, help_text='Input files used to run the pipeline test', related_name='tested_in', to='pipeline.ProgramFile'),
        ),
        migrations.AlterField(
            model_name='pipelinerun',
            name='clean_files',
            field=models.TextField(blank=True, help_text='List of extra files to remove when job is finished', null=True),
        ),
        migrations.AlterField(
            model_name='pipelinerun',
            name='pipeline',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='pipeline.Pipeline'),
        ),
        migrations.AlterField(
            model_name='pipelinerun',
            name='run_as_test',
            field=models.PositiveIntegerField(blank=True, help_text='Every (x) days, run this pipeline-run as a test.', null=True),
        ),
        migrations.AlterField(
            model_name='program',
            name='command_line',
            field=models.TextField(help_text='Write the command line using replacement syntax for inputs and outputs'),
        ),
        migrations.AlterField(
            model_name='program',
            name='description',
            field=models.TextField(blank=True, help_text='Describe the program and what it does in detail.', null=True),
        ),
        migrations.AlterField(
            model_name='program',
            name='files',
            field=models.ManyToManyField(blank=True, help_text='Files used when running this program', related_name='use_in', to='pipeline.ProgramFile'),
        ),
        migrations.AlterField(
            model_name='program',
            name='keep',
            field=models.BooleanField(default=True, help_text='Should the output files be kept or deleted.'),
        ),
        migrations.AlterField(
            model_name='program',
            name='limit',
            field=models.CharField(blank=True, help_text='Specify amount of time to limit this process, [days]-[hours]:[minutes]:[seconds]', max_length=12, null=True),
        ),
        migrations.AlterField(
            model_name='program',
            name='memory',
            field=models.CharField(choices=[('500M', '500MB'), ('1G', '1GB'), ('2G', '2GB'), ('5G', '5GB'), ('10G', '10GB'), ('20G', '20GB'), ('50G', '50GB'), ('100G', '100GB')], default='1000M', help_text='Amount of memory to request', max_length=16),
        ),
        migrations.AlterField(
            model_name='program',
            name='test_files',
            field=models.ManyToManyField(blank=True, help_text='Files to test just this program.', related_name='test_in', to='pipeline.ProgramFile'),
        ),
        migrations.AlterField(
            model_name='program',
            name='wait_for_files',
            field=models.BooleanField(default=False, help_text='Wait for files, use this if the cluster is not syncing files beforerunning the job and causing errors.'),
        ),
        migrations.AlterField(
            model_name='programfile',
            name='description',
            field=models.TextField(blank=True, help_text='Describe the file is and what it does in detail.', null=True),
        ),
        migrations.AlterField(
            model_name='programfile',
            name='store',
            field=models.FileField(upload_to='pipeline/files', verbose_name='File'),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='debug_text',
            field=models.TextField(blank=True, null=True, verbose_name='Command and Debug'),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='duration',
            field=models.PositiveIntegerField(blank=True, help_text='Number of seconds to run.', null=True),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='error_text',
            field=models.TextField(blank=True, null=True, verbose_name='Error'),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='follower_id',
            field=models.SlugField(blank=True, help_text='Name or ID of the next job that depends on this', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='input_size',
            field=models.PositiveIntegerField(blank=True, help_text='Size in kilobytes of all input files.', null=True),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='job_id',
            field=models.SlugField(help_text='Name or ID of the job in the cloud runner', max_length=255),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='output_size',
            field=models.PositiveIntegerField(blank=True, help_text='Size in kilobytes of all output files.', null=True),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='previous_id',
            field=models.SlugField(blank=True, help_text='Name or ID of the previous job we depend on', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='programrun',
            name='program',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='pipeline.Program'),
        ),
    ]
